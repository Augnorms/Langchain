from google import genai
from google.genai import types
import os
from langchain_google_genai import ChatGoogleGenerativeAI

# Set your API key
api_key = os.getenv("GEMINI_API_KEY")



def querydatabase_ai():
    # Initialize Google Generative AI with API key
   
    client = genai.Client(api_key=api_key)
    
    # Example query execution
    response = client.models.generate_content(model='gemini-2.0-flash', contents='Explain how AI works')

    print(response.text)

----------------------------------

    llm = ChatGoogleGenerativeAI(
        model="gemini-1.5-flash",
        temperature=0,
        max_retries=2,
        google_api_key=os.getenv("GOOGLEAPI"),  # From .env file  
    )

-----------------openai-github-marketplace------------------------- 
client = OpenAI(
    base_url="https://models.inference.ai.azure.com",
    api_key=os.environ["GITHUBAPI"],
)  

response = client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": "What is the capital of France?",
        }
    ],
    model="gpt-4o",
    temperature=1,
    max_tokens=4096,
    top_p=1
)

    # Initialize the Azure OpenAI LLM
    llm = AzureOpenAI(
        deployment_name="gpt-4o", 
        api_key=os.environ["GITHUBAPI"],
        azure_endpoint="https://models.inference.ai.azure.com",
        api_version="2024-10-21"
    )
.................................................

    llm = AzureChatOpenAI(
        deployment_name="gpt-4o", 
        api_key=os.environ["GITHUBAPI"],
        azure_endpoint="https://models.inference.ai.azure.com",
        api_version="2024-10-21",   
        model="gpt-4o",  
    )

------------------------------------------------

  # Save chat history to a text file
    save_path = os.path.join(os.path.dirname(__file__), "chat_history.txt")

    with open(save_path, "w", encoding="utf-8") as file:
        for msg in chat_history:
            # Determine the role based on message type
            if isinstance(msg, SystemMessage):
                role = "System"
            elif isinstance(msg, HumanMessage):
                role = "User"
            elif isinstance(msg, AIMessage):
                role = "AI"
            else:
                role = "Unknown"
            file.write(f"{role}: {msg.content}\n")
